# 수열 추측하기
# 가장 윗줄에 1부터 N까지의 숫자가 한개씩 적혀 있다. 그리고 둘째 줄부터 차례대로 파스칼의 삼각형처럼 위의 두개를 더한 값이 저장 되게 한다.
# 예를 들어 N 이 4이고 가장 윗줄에 3 1 2 4 가 있다고 했을때, 다음과 같은 삼각형이 그려진다.
# 3   1   2   4
#   4   3   6
#     7   9
#      16
# N 과 가장 밑에 있는 숫자가 주어져 있을 때 가장 윗줄에 있는 숫자를 구하는 프로그램을 구하여라
# 단 답이 여러가지가 나오는 경우 사전순으로 가장 앞에 오는것을 출력

# 입력설명
# 첫째 줄에 두개의 정수 N, F가 주어진다. N은 가장 윗줄에 있는 숫자의 개수를 의미하며 F는 가장 밑에 줄에 있는 수다.
# 4 16

# 출력설명
# 3 1 2 4

# 해설
import sys

def DFS(L, sum):
    if L==n and sum==f:
        for x in p:
            print(x, end=' ')
        sys.exit(0)
    else:
        for i in range(1, n+1):
            if ch[i]==0:
                ch[i]=1
                p[L]=i
                DFS(L+1, sum+(p[L]*b[L]))
                ch[i]=0

if __name__ == "__main__":
    n, f=map(int, input().split())
    p=[0]*n
    b=[1]*n
    ch=[0]*(n+1)
    for i in range(1, n):
        b[i] = b[i]*(n-1)//i
    DFS(0, 0)
